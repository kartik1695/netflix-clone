{"ast":null,"code":"var _jsxFileName = \"/home/hap-180/Documents/my_webapp/netflix_clone/src/Row.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from \"./axios\";\nimport requests from './requests';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nconst base_url = \"https://image.tmdb.org/t/p/w500\";\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  const [movies, setMovies] = useState([]); // console.log(fetchUrl);\n\n  useEffect(() => {\n    // if [] , run once when the row loads and dont run again\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    ;\n    fetchData();\n  }, [fetchUrl]); // console.log(movies);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row__posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(\"img\", {\n    key: movie.id,\n    className: `row__poster ${isLargeRow && \"row__posterLarge\"}`,\n    src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n    alt: movie.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(YouTube, {\n    videoId: trailerUrl,\n    opts: opts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }));\n}\n\nexport default Row;","map":{"version":3,"sources":["/home/hap-180/Documents/my_webapp/netflix_clone/src/Row.js"],"names":["React","useState","useEffect","axios","requests","YouTube","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","fetchData","request","get","data","results","map","movie","id","poster_path","backdrop_path","name","trailerUrl","opts"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,MAAMC,QAAQ,GAAG,iCAAjB;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAb,EAA0C;AAEtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC,CAFsC,CAGtC;;AACAC,EAAAA,SAAS,CAAE,MAAM;AACjB;AACA,mBAAeW,SAAf,GAA2B;AAC3B,YAAMC,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAUN,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACE,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACC;;AAAA;AACDD,IAAAA,SAAS;AACR,GARQ,EAQN,CAACJ,QAAD,CARM,CAAT,CAJsC,CActC;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADD,eAEC;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,MAAM,CAACO,GAAP,CAAWC,KAAK,iBACd;AACA,IAAA,GAAG,EAAIA,KAAK,CAACC,EADb;AAEA,IAAA,SAAS,EAAK,eAAcV,UAAU,IAAI,kBAAmB,EAF7D;AAGA,IAAA,GAAG,EAAG,GAAEJ,QAAS,GAAEI,UAAU,GAAGS,KAAK,CAACE,WAAT,GAAsBF,KAAK,CAACG,aAAc,EAHvE;AAG0E,IAAA,GAAG,EAAIH,KAAK,CAACI,IAHvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADL,CAFD,eAUC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAIC,UAApB;AAAgC,IAAA,IAAI,EAAIC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVD,CADJ;AAiBH;;AAED,eAAelB,GAAf","sourcesContent":["import React, { useState , useEffect }from 'react';\nimport axios from \"./axios\";\nimport requests from './requests';\nimport './Row.css'\nimport YouTube from 'react-youtube';\nconst base_url = \"https://image.tmdb.org/t/p/w500\"\n\nfunction Row({title,fetchUrl, isLargeRow}){\n\n    const [movies, setMovies] = useState([]);\n    // console.log(fetchUrl);\n    useEffect( () => {\n    // if [] , run once when the row loads and dont run again\n    async function fetchData() {\n    const request = await axios.get(fetchUrl);\n    setMovies(request.data.results);\n    return request;\n    };\n    fetchData();\n    }, [fetchUrl] );\n\n    // console.log(movies);\n    return (\n        <div className=\"row\">\n         <h2>{title}</h2>\n         <div className = \"row__posters\">\n            { movies.map(movie => (\n                <img\n                key = {movie.id}\n                className = {`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                src={`${base_url}${isLargeRow ? movie.poster_path: movie.backdrop_path}`} alt = {movie.name}/>\n            ))}\n         </div>\n         <YouTube videoId = {trailerUrl} opts = {opts}/>\n        </div>\n    )\n\n\n\n}\n\nexport default Row;"]},"metadata":{},"sourceType":"module"}